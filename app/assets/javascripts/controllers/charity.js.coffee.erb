<% environment.context_class.instance_eval { include ActionView::Helpers } %>
<% environment.context_class.instance_eval { include HostHelper } %>
<% environment.context_class.instance_eval { include Rails.application.routes.url_helpers } %>

App.controller 'CharityCtrl', ['$scope', '$location', '$timeout', '$http', '$routeParams', '$rootScope', \
                            ($scope, $location, $timeout, $http, $routeParams, $rootScope) ->
  $scope.bn = $routeParams.bn

  $scope.setCharityData = ->
    # Ensure rootScope contains a charities object.
    $rootScope.charities = {} if 'charities' not of $rootScope

    if $scope.bn not of $rootScope.charities
      # Load the charity if we haven't yet.
      url = "<%= site_host() %>/api/charity/#{$scope.bn}"

      $http.get(url)
        .success((data, status, headers, config) ->
          for i in [0..data.news.length-1]
            data.news[i].url = unescape(data.news[i].url)

          $scope.charityData = data
          $rootScope.charities[$scope.bn] = data
        )
    else
      # Otherwise get the cached data from rootScope.
      $scope.charityData = $rootScope.charities[$scope.bn]

  $scope.hasGeneralInfo = ->
    return $scope.charityData.general.website or $scope.charityData.general.email

  $scope.websiteURL = (website) ->
    # Prepend http:// if the website URL doesn't yet contain it.
    if website.indexOf('http') == -1
      website = "http://#{website}"

    return website

  $scope.setCharityData()
]

App.directive('rating', () ->
  return {
    restrict: 'E',
    template: '<span ng-repeat="star in stars_filled" class="icon icon-star-filled"></span>' +
              '<span ng-repeat="star in stars_unfilled" class="icon icon-star"></span>',
    
    link: ($scope, elem, attrs) -> 
      $scope.stars_filled = [];
      for i in [1..$scope.ratingValue] 
        $scope.stars_filled.push({});
      
      $scope.stars_unfilled = [];
      for i in [1..(5-$scope.ratingValue)]
        $scope.stars_unfilled.push({});
    
  }
);

